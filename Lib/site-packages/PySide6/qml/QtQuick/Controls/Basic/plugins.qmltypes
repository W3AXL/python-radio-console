import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "qquickbasicstyle_p.h"
        name: "QQuickBasicStyle"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "QtQuick.Controls.Basic/Basic 2.1",
            "QtQuick.Controls.Basic/Basic 6.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [513, 1536]
        Property { name: "backgroundColor"; type: "QColor"; isReadonly: true; read: "backgroundColor" }
        Property {
            name: "overlayModalColor"
            type: "QColor"
            isReadonly: true
            read: "overlayModalColor"
        }
        Property { name: "overlayDimColor"; type: "QColor"; isReadonly: true; read: "overlayDimColor" }
        Property { name: "textColor"; type: "QColor"; isReadonly: true; read: "textColor" }
        Property { name: "textDarkColor"; type: "QColor"; isReadonly: true; read: "textDarkColor" }
        Property { name: "textLightColor"; type: "QColor"; isReadonly: true; read: "textLightColor" }
        Property { name: "textLinkColor"; type: "QColor"; isReadonly: true; read: "textLinkColor" }
        Property {
            name: "textSelectionColor"
            type: "QColor"
            isReadonly: true
            read: "textSelectionColor"
        }
        Property {
            name: "textDisabledColor"
            type: "QColor"
            isReadonly: true
            read: "textDisabledColor"
        }
        Property {
            name: "textDisabledLightColor"
            type: "QColor"
            isReadonly: true
            read: "textDisabledLightColor"
        }
        Property {
            name: "textPlaceholderColor"
            type: "QColor"
            isReadonly: true
            read: "textPlaceholderColor"
        }
        Property { name: "focusColor"; type: "QColor"; isReadonly: true; read: "focusColor" }
        Property { name: "focusLightColor"; type: "QColor"; isReadonly: true; read: "focusLightColor" }
        Property {
            name: "focusPressedColor"
            type: "QColor"
            isReadonly: true
            read: "focusPressedColor"
        }
        Property { name: "buttonColor"; type: "QColor"; isReadonly: true; read: "buttonColor" }
        Property {
            name: "buttonPressedColor"
            type: "QColor"
            isReadonly: true
            read: "buttonPressedColor"
        }
        Property {
            name: "buttonCheckedColor"
            type: "QColor"
            isReadonly: true
            read: "buttonCheckedColor"
        }
        Property {
            name: "buttonCheckedPressedColor"
            type: "QColor"
            isReadonly: true
            read: "buttonCheckedPressedColor"
        }
        Property {
            name: "buttonCheckedFocusColor"
            type: "QColor"
            isReadonly: true
            read: "buttonCheckedFocusColor"
        }
        Property { name: "toolButtonColor"; type: "QColor"; isReadonly: true; read: "toolButtonColor" }
        Property { name: "tabButtonColor"; type: "QColor"; isReadonly: true; read: "tabButtonColor" }
        Property {
            name: "tabButtonPressedColor"
            type: "QColor"
            isReadonly: true
            read: "tabButtonPressedColor"
        }
        Property {
            name: "tabButtonCheckedPressedColor"
            type: "QColor"
            isReadonly: true
            read: "tabButtonCheckedPressedColor"
        }
        Property { name: "delegateColor"; type: "QColor"; isReadonly: true; read: "delegateColor" }
        Property {
            name: "delegatePressedColor"
            type: "QColor"
            isReadonly: true
            read: "delegatePressedColor"
        }
        Property {
            name: "delegateFocusColor"
            type: "QColor"
            isReadonly: true
            read: "delegateFocusColor"
        }
        Property {
            name: "indicatorPressedColor"
            type: "QColor"
            isReadonly: true
            read: "indicatorPressedColor"
        }
        Property {
            name: "indicatorDisabledColor"
            type: "QColor"
            isReadonly: true
            read: "indicatorDisabledColor"
        }
        Property {
            name: "indicatorFrameColor"
            type: "QColor"
            isReadonly: true
            read: "indicatorFrameColor"
        }
        Property {
            name: "indicatorFramePressedColor"
            type: "QColor"
            isReadonly: true
            read: "indicatorFramePressedColor"
        }
        Property {
            name: "indicatorFrameDisabledColor"
            type: "QColor"
            isReadonly: true
            read: "indicatorFrameDisabledColor"
        }
        Property { name: "frameDarkColor"; type: "QColor"; isReadonly: true; read: "frameDarkColor" }
        Property { name: "frameLightColor"; type: "QColor"; isReadonly: true; read: "frameLightColor" }
        Property { name: "scrollBarColor"; type: "QColor"; isReadonly: true; read: "scrollBarColor" }
        Property {
            name: "scrollBarPressedColor"
            type: "QColor"
            isReadonly: true
            read: "scrollBarPressedColor"
        }
        Property { name: "progressBarColor"; type: "QColor"; isReadonly: true; read: "progressBarColor" }
        Property {
            name: "pageIndicatorColor"
            type: "QColor"
            isReadonly: true
            read: "pageIndicatorColor"
        }
        Property { name: "separatorColor"; type: "QColor"; isReadonly: true; read: "separatorColor" }
        Property {
            name: "disabledDarkColor"
            type: "QColor"
            isReadonly: true
            read: "disabledDarkColor"
        }
        Property {
            name: "disabledLightColor"
            type: "QColor"
            isReadonly: true
            read: "disabledLightColor"
        }
    }
}
