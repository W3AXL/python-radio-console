import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "private/qquicklinearlayout_p.h"
        name: "QQuickColumnLayout"
        accessSemantics: "reference"
        prototype: "QQuickLinearLayout"
        exports: [
            "QtQuick.Layouts/ColumnLayout 1.0",
            "QtQuick.Layouts/ColumnLayout 1.1",
            "QtQuick.Layouts/ColumnLayout 2.0",
            "QtQuick.Layouts/ColumnLayout 2.1",
            "QtQuick.Layouts/ColumnLayout 2.4",
            "QtQuick.Layouts/ColumnLayout 2.7",
            "QtQuick.Layouts/ColumnLayout 2.11",
            "QtQuick.Layouts/ColumnLayout 6.0"
        ]
        exportMetaObjectRevisions: [256, 257, 512, 513, 516, 519, 523, 1536]
    }
    Component {
        file: "private/qquicklinearlayout_p.h"
        name: "QQuickGridLayout"
        accessSemantics: "reference"
        prototype: "QQuickGridLayoutBase"
        exports: [
            "QtQuick.Layouts/GridLayout 1.0",
            "QtQuick.Layouts/GridLayout 1.1",
            "QtQuick.Layouts/GridLayout 2.0",
            "QtQuick.Layouts/GridLayout 2.1",
            "QtQuick.Layouts/GridLayout 2.4",
            "QtQuick.Layouts/GridLayout 2.7",
            "QtQuick.Layouts/GridLayout 2.11",
            "QtQuick.Layouts/GridLayout 6.0"
        ]
        exportMetaObjectRevisions: [256, 257, 512, 513, 516, 519, 523, 1536]
        Enum {
            name: "Flow"
            values: ["LeftToRight", "TopToBottom"]
        }
        Property {
            name: "columnSpacing"
            type: "double"
            read: "columnSpacing"
            write: "setColumnSpacing"
        }
        Property { name: "rowSpacing"; type: "double"; read: "rowSpacing"; write: "setRowSpacing" }
        Property { name: "columns"; type: "int"; read: "columns"; write: "setColumns" }
        Property { name: "rows"; type: "int"; read: "rows"; write: "setRows" }
        Property { name: "flow"; type: "Flow"; read: "flow"; write: "setFlow" }
    }
    Component {
        file: "private/qquicklinearlayout_p.h"
        name: "QQuickGridLayoutBase"
        accessSemantics: "reference"
        prototype: "QQuickLayout"
        Property {
            name: "layoutDirection"
            revision: 257
            type: "Qt::LayoutDirection"
            read: "layoutDirection"
            write: "setLayoutDirection"
        }
        Signal { name: "layoutDirectionChanged"; revision: 257 }
    }
    Component {
        file: "private/qquicklayout_p.h"
        name: "QQuickLayout"
        accessSemantics: "reference"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: [
            "QtQuick.Layouts/Layout 1.0",
            "QtQuick.Layouts/Layout 2.0",
            "QtQuick.Layouts/Layout 2.1",
            "QtQuick.Layouts/Layout 2.4",
            "QtQuick.Layouts/Layout 2.7",
            "QtQuick.Layouts/Layout 2.11",
            "QtQuick.Layouts/Layout 6.0"
        ]
        isCreatable: false
        exportMetaObjectRevisions: [256, 512, 513, 516, 519, 523, 1536]
        attachedType: "QQuickLayoutAttached"
        Method { name: "invalidateSenderItem" }
        Method { name: "_q_dumpLayoutTree" }
    }
    Component {
        file: "private/qquicklayout_p.h"
        name: "QQuickLayoutAttached"
        accessSemantics: "reference"
        prototype: "QObject"
        Property { name: "minimumWidth"; type: "double"; read: "minimumWidth"; write: "setMinimumWidth" }
        Property {
            name: "minimumHeight"
            type: "double"
            read: "minimumHeight"
            write: "setMinimumHeight"
        }
        Property {
            name: "preferredWidth"
            type: "double"
            read: "preferredWidth"
            write: "setPreferredWidth"
        }
        Property {
            name: "preferredHeight"
            type: "double"
            read: "preferredHeight"
            write: "setPreferredHeight"
        }
        Property { name: "maximumWidth"; type: "double"; read: "maximumWidth"; write: "setMaximumWidth" }
        Property {
            name: "maximumHeight"
            type: "double"
            read: "maximumHeight"
            write: "setMaximumHeight"
        }
        Property { name: "fillHeight"; type: "bool"; read: "fillHeight"; write: "setFillHeight" }
        Property { name: "fillWidth"; type: "bool"; read: "fillWidth"; write: "setFillWidth" }
        Property { name: "row"; type: "int"; read: "row"; write: "setRow" }
        Property { name: "column"; type: "int"; read: "column"; write: "setColumn" }
        Property { name: "rowSpan"; type: "int"; read: "rowSpan"; write: "setRowSpan" }
        Property { name: "columnSpan"; type: "int"; read: "columnSpan"; write: "setColumnSpan" }
        Property { name: "alignment"; type: "Qt::Alignment"; read: "alignment"; write: "setAlignment" }
        Property { name: "margins"; type: "double"; read: "margins"; write: "setMargins" }
        Property { name: "leftMargin"; type: "double"; read: "leftMargin"; write: "setLeftMargin" }
        Property { name: "topMargin"; type: "double"; read: "topMargin"; write: "setTopMargin" }
        Property { name: "rightMargin"; type: "double"; read: "rightMargin"; write: "setRightMargin" }
        Property { name: "bottomMargin"; type: "double"; read: "bottomMargin"; write: "setBottomMargin" }
    }
    Component {
        file: "private/qquicklinearlayout_p.h"
        name: "QQuickLinearLayout"
        accessSemantics: "reference"
        prototype: "QQuickGridLayoutBase"
        Property { name: "spacing"; type: "double"; read: "spacing"; write: "setSpacing" }
    }
    Component {
        file: "private/qquicklinearlayout_p.h"
        name: "QQuickRowLayout"
        accessSemantics: "reference"
        prototype: "QQuickLinearLayout"
        exports: [
            "QtQuick.Layouts/RowLayout 1.0",
            "QtQuick.Layouts/RowLayout 1.1",
            "QtQuick.Layouts/RowLayout 2.0",
            "QtQuick.Layouts/RowLayout 2.1",
            "QtQuick.Layouts/RowLayout 2.4",
            "QtQuick.Layouts/RowLayout 2.7",
            "QtQuick.Layouts/RowLayout 2.11",
            "QtQuick.Layouts/RowLayout 6.0"
        ]
        exportMetaObjectRevisions: [256, 257, 512, 513, 516, 519, 523, 1536]
    }
    Component {
        file: "private/qquickstacklayout_p.h"
        name: "QQuickStackLayout"
        accessSemantics: "reference"
        prototype: "QQuickLayout"
        exports: [
            "QtQuick.Layouts/StackLayout 1.3",
            "QtQuick.Layouts/StackLayout 2.0",
            "QtQuick.Layouts/StackLayout 2.1",
            "QtQuick.Layouts/StackLayout 2.4",
            "QtQuick.Layouts/StackLayout 2.7",
            "QtQuick.Layouts/StackLayout 2.11",
            "QtQuick.Layouts/StackLayout 6.0"
        ]
        exportMetaObjectRevisions: [259, 512, 513, 516, 519, 523, 1536]
        attachedType: "QQuickStackLayoutAttached"
        Property { name: "count"; type: "int"; isReadonly: true; read: "count" }
        Property { name: "currentIndex"; type: "int"; read: "currentIndex"; write: "setCurrentIndex" }
        Method {
            name: "itemAt"
            type: "QQuickItem*"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        file: "private/qquickstacklayout_p.h"
        name: "QQuickStackLayoutAttached"
        accessSemantics: "reference"
        prototype: "QObject"
        Property { name: "index"; type: "int"; isReadonly: true; read: "index" }
        Property { name: "isCurrentItem"; type: "bool"; isReadonly: true; read: "isCurrentItem" }
        Property {
            name: "layout"
            type: "QQuickStackLayout"
            isReadonly: true
            isPointer: true
            read: "layout"
        }
    }
}
