import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "private/qquickboundaryrule_p.h"
        name: "QQuickBoundaryRule"
        accessSemantics: "reference"
        prototype: "QObject"
        interfaces: ["QQmlPropertyValueInterceptor"]
        exports: [
            "Qt.labs.animation/BoundaryRule 1.0",
            "Qt.labs.animation/BoundaryRule 6.0"
        ]
        exportMetaObjectRevisions: [256, 1536]
        Enum {
            name: "OvershootFilter"
            values: ["None", "Peak"]
        }
        Property { name: "enabled"; type: "bool"; read: "enabled"; write: "setEnabled" }
        Property { name: "minimum"; type: "double"; read: "minimum"; write: "setMinimum" }
        Property {
            name: "minimumOvershoot"
            type: "double"
            read: "minimumOvershoot"
            write: "setMinimumOvershoot"
        }
        Property { name: "maximum"; type: "double"; read: "maximum"; write: "setMaximum" }
        Property {
            name: "maximumOvershoot"
            type: "double"
            read: "maximumOvershoot"
            write: "setMaximumOvershoot"
        }
        Property {
            name: "overshootScale"
            type: "double"
            read: "overshootScale"
            write: "setOvershootScale"
        }
        Property { name: "currentOvershoot"; type: "double"; isReadonly: true; read: "currentOvershoot" }
        Property { name: "peakOvershoot"; type: "double"; isReadonly: true; read: "peakOvershoot" }
        Property {
            name: "overshootFilter"
            type: "OvershootFilter"
            read: "overshootFilter"
            write: "setOvershootFilter"
        }
        Property { name: "easing"; type: "QEasingCurve"; read: "easing"; write: "setEasing" }
        Property {
            name: "returnDuration"
            type: "int"
            read: "returnDuration"
            write: "setReturnDuration"
        }
        Method { name: "componentFinalized" }
        Method { name: "returnToBounds"; type: "bool" }
    }
}
