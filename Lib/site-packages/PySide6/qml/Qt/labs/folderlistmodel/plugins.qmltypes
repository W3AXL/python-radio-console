import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "qabstractitemmodel.h"
        name: "QAbstractItemModel"
        accessSemantics: "reference"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: [
                "NoLayoutChangeHint",
                "VerticalSortHint",
                "HorizontalSortHint"
            ]
        }
        Enum {
            name: "CheckIndexOption"
            values: [
                "NoOption",
                "IndexIsValid",
                "DoNotUseParent",
                "ParentIsInvalid"
            ]
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QList<int>" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutChanged" }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutAboutToBeChanged" }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method { name: "resetInternalData" }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        file: "qabstractitemmodel.h"
        name: "QAbstractListModel"
        accessSemantics: "reference"
        prototype: "QAbstractItemModel"
    }
    Component {
        file: "private/qquickfolderlistmodel_p.h"
        name: "QQuickFolderListModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        interfaces: ["QQmlParserStatus"]
        exports: [
            "Qt.labs.folderlistmodel/FolderListModel 2.0",
            "Qt.labs.folderlistmodel/FolderListModel 2.1",
            "Qt.labs.folderlistmodel/FolderListModel 2.2",
            "Qt.labs.folderlistmodel/FolderListModel 2.11",
            "Qt.labs.folderlistmodel/FolderListModel 2.12",
            "Qt.labs.folderlistmodel/FolderListModel 6.0"
        ]
        exportMetaObjectRevisions: [512, 513, 514, 523, 524, 1536]
        Enum {
            name: "SortField"
            values: ["Unsorted", "Name", "Time", "Size", "Type"]
        }
        Enum {
            name: "Status"
            values: ["Null", "Ready", "Loading"]
        }
        Property { name: "folder"; type: "QUrl"; read: "folder"; write: "setFolder" }
        Property { name: "rootFolder"; type: "QUrl"; read: "rootFolder"; write: "setRootFolder" }
        Property { name: "parentFolder"; type: "QUrl"; isReadonly: true; read: "parentFolder" }
        Property {
            name: "nameFilters"
            type: "QStringList"
            read: "nameFilters"
            write: "setNameFilters"
        }
        Property { name: "sortField"; type: "SortField"; read: "sortField"; write: "setSortField" }
        Property { name: "sortReversed"; type: "bool"; read: "sortReversed"; write: "setSortReversed" }
        Property {
            name: "showFiles"
            revision: 513
            type: "bool"
            read: "showFiles"
            write: "setShowFiles"
        }
        Property { name: "showDirs"; type: "bool"; read: "showDirs"; write: "setShowDirs" }
        Property { name: "showDirsFirst"; type: "bool"; read: "showDirsFirst"; write: "setShowDirsFirst" }
        Property {
            name: "showDotAndDotDot"
            type: "bool"
            read: "showDotAndDotDot"
            write: "setShowDotAndDotDot"
        }
        Property {
            name: "showHidden"
            revision: 513
            type: "bool"
            read: "showHidden"
            write: "setShowHidden"
        }
        Property {
            name: "showOnlyReadable"
            type: "bool"
            read: "showOnlyReadable"
            write: "setShowOnlyReadable"
        }
        Property {
            name: "caseSensitive"
            revision: 514
            type: "bool"
            read: "caseSensitive"
            write: "setCaseSensitive"
        }
        Property { name: "count"; type: "int"; isReadonly: true; read: "count" }
        Property { name: "status"; revision: 523; type: "Status"; isReadonly: true; read: "status" }
        Property {
            name: "sortCaseSensitive"
            revision: 524
            type: "bool"
            read: "sortCaseSensitive"
            write: "setSortCaseSensitive"
        }
        Signal { name: "rowCountChanged" }
        Signal { name: "countChanged"; revision: 513 }
        Signal { name: "statusChanged"; revision: 523 }
        Method {
            name: "_q_directoryChanged"
            Parameter { name: "directory"; type: "QString" }
            Parameter { name: "list"; type: "QList<FileProperty>" }
        }
        Method {
            name: "_q_directoryUpdated"
            Parameter { name: "directory"; type: "QString" }
            Parameter { name: "list"; type: "QList<FileProperty>" }
            Parameter { name: "fromIndex"; type: "int" }
            Parameter { name: "toIndex"; type: "int" }
        }
        Method {
            name: "_q_sortFinished"
            Parameter { name: "list"; type: "QList<FileProperty>" }
        }
        Method {
            name: "_q_statusChanged"
            Parameter { name: "s"; type: "QQuickFolderListModel::Status" }
        }
        Method {
            name: "isFolder"
            type: "bool"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "idx"; type: "int" }
            Parameter { name: "property"; type: "QString" }
        }
        Method {
            name: "indexOf"
            type: "int"
            Parameter { name: "file"; type: "QUrl" }
        }
    }
}
