import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "qabstractitemmodel.h"
        name: "QAbstractTableModel"
        accessSemantics: "reference"
        prototype: "QAbstractItemModel"
    }
    Component {
        file: "private/qqmldelegatecomponent_p.h"
        name: "QQmlDelegateChoice"
        accessSemantics: "reference"
        defaultProperty: "delegate"
        prototype: "QObject"
        exports: [
            "Qt.labs.qmlmodels/DelegateChoice 1.0",
            "Qt.labs.qmlmodels/DelegateChoice 6.0"
        ]
        exportMetaObjectRevisions: [256, 1536]
        Property { name: "roleValue"; type: "QVariant"; read: "roleValue"; write: "setRoleValue" }
        Property { name: "row"; type: "int"; read: "row"; write: "setRow" }
        Property { name: "index"; type: "int"; read: "row"; write: "setRow" }
        Property { name: "column"; type: "int"; read: "column"; write: "setColumn" }
        Property {
            name: "delegate"
            type: "QQmlComponent"
            isPointer: true
            read: "delegate"
            write: "setDelegate"
        }
        Signal { name: "changed" }
    }
    Component {
        file: "private/qqmldelegatecomponent_p.h"
        name: "QQmlDelegateChooser"
        accessSemantics: "reference"
        defaultProperty: "choices"
        prototype: "QQmlAbstractDelegateComponent"
        exports: [
            "Qt.labs.qmlmodels/DelegateChooser 1.0",
            "Qt.labs.qmlmodels/DelegateChooser 2.0",
            "Qt.labs.qmlmodels/DelegateChooser 6.0"
        ]
        exportMetaObjectRevisions: [256, 512, 1536]
        Property { name: "role"; type: "QString"; read: "role"; write: "setRole" }
        Property {
            name: "choices"
            type: "QQmlDelegateChoice"
            isList: true
            isReadonly: true
            read: "choices"
        }
    }
    Component {
        file: "private/qqmltablemodel_p.h"
        name: "QQmlTableModel"
        accessSemantics: "reference"
        defaultProperty: "columns"
        prototype: "QAbstractTableModel"
        interfaces: ["QQmlParserStatus"]
        exports: [
            "Qt.labs.qmlmodels/TableModel 1.0",
            "Qt.labs.qmlmodels/TableModel 6.0"
        ]
        exportMetaObjectRevisions: [256, 1536]
        Property { name: "columnCount"; type: "int"; isReadonly: true; read: "columnCount" }
        Property { name: "rowCount"; type: "int"; isReadonly: true; read: "rowCount" }
        Property { name: "rows"; type: "QVariant"; read: "rows"; write: "setRows" }
        Property {
            name: "columns"
            type: "QQmlTableModelColumn"
            isList: true
            isReadonly: true
            read: "columns"
        }
        Method {
            name: "appendRow"
            Parameter { name: "row"; type: "QVariant" }
        }
        Method { name: "clear" }
        Method {
            name: "getRow"
            type: "QVariant"
            Parameter { name: "rowIndex"; type: "int" }
        }
        Method {
            name: "insertRow"
            Parameter { name: "rowIndex"; type: "int" }
            Parameter { name: "row"; type: "QVariant" }
        }
        Method {
            name: "moveRow"
            Parameter { name: "fromRowIndex"; type: "int" }
            Parameter { name: "toRowIndex"; type: "int" }
            Parameter { name: "rows"; type: "int" }
        }
        Method {
            name: "moveRow"
            Parameter { name: "fromRowIndex"; type: "int" }
            Parameter { name: "toRowIndex"; type: "int" }
        }
        Method {
            name: "removeRow"
            Parameter { name: "rowIndex"; type: "int" }
            Parameter { name: "rows"; type: "int" }
        }
        Method {
            name: "removeRow"
            Parameter { name: "rowIndex"; type: "int" }
        }
        Method {
            name: "setRow"
            Parameter { name: "rowIndex"; type: "int" }
            Parameter { name: "row"; type: "QVariant" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "QString" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "QString" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        file: "private/qqmltablemodelcolumn_p.h"
        name: "QQmlTableModelColumn"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "Qt.labs.qmlmodels/TableModelColumn 1.0",
            "Qt.labs.qmlmodels/TableModelColumn 6.0"
        ]
        exportMetaObjectRevisions: [256, 1536]
        Property { name: "display"; type: "QJSValue"; read: "display"; write: "setDisplay" }
        Property { name: "setDisplay"; type: "QJSValue"; read: "getSetDisplay"; write: "setSetDisplay" }
        Property { name: "decoration"; type: "QJSValue"; read: "decoration"; write: "setDecoration" }
        Property {
            name: "setDecoration"
            type: "QJSValue"
            read: "getSetDecoration"
            write: "setSetDecoration"
        }
        Property { name: "edit"; type: "QJSValue"; read: "edit"; write: "setEdit" }
        Property { name: "setEdit"; type: "QJSValue"; read: "getSetEdit"; write: "setSetEdit" }
        Property { name: "toolTip"; type: "QJSValue"; read: "toolTip"; write: "setToolTip" }
        Property { name: "setToolTip"; type: "QJSValue"; read: "getSetToolTip"; write: "setSetToolTip" }
        Property { name: "statusTip"; type: "QJSValue"; read: "statusTip"; write: "setStatusTip" }
        Property {
            name: "setStatusTip"
            type: "QJSValue"
            read: "getSetStatusTip"
            write: "setSetStatusTip"
        }
        Property { name: "whatsThis"; type: "QJSValue"; read: "whatsThis"; write: "setWhatsThis" }
        Property {
            name: "setWhatsThis"
            type: "QJSValue"
            read: "getSetWhatsThis"
            write: "setSetWhatsThis"
        }
        Property { name: "font"; type: "QJSValue"; read: "font"; write: "setFont" }
        Property { name: "setFont"; type: "QJSValue"; read: "getSetFont"; write: "setSetFont" }
        Property {
            name: "textAlignment"
            type: "QJSValue"
            read: "textAlignment"
            write: "setTextAlignment"
        }
        Property {
            name: "setTextAlignment"
            type: "QJSValue"
            read: "getSetTextAlignment"
            write: "setSetTextAlignment"
        }
        Property { name: "background"; type: "QJSValue"; read: "background"; write: "setBackground" }
        Property {
            name: "setBackground"
            type: "QJSValue"
            read: "getSetBackground"
            write: "setSetBackground"
        }
        Property { name: "foreground"; type: "QJSValue"; read: "foreground"; write: "setForeground" }
        Property {
            name: "setForeground"
            type: "QJSValue"
            read: "getSetForeground"
            write: "setSetForeground"
        }
        Property { name: "checkState"; type: "QJSValue"; read: "checkState"; write: "setCheckState" }
        Property {
            name: "setCheckState"
            type: "QJSValue"
            read: "getSetCheckState"
            write: "setSetCheckState"
        }
        Property {
            name: "accessibleText"
            type: "QJSValue"
            read: "accessibleText"
            write: "setAccessibleText"
        }
        Property {
            name: "setAccessibleText"
            type: "QJSValue"
            read: "getSetAccessibleText"
            write: "setSetAccessibleText"
        }
        Property {
            name: "accessibleDescription"
            type: "QJSValue"
            read: "accessibleDescription"
            write: "setAccessibleDescription"
        }
        Property {
            name: "setAccessibleDescription"
            type: "QJSValue"
            read: "getSetAccessibleDescription"
            write: "setSetAccessibleDescription"
        }
        Property { name: "sizeHint"; type: "QJSValue"; read: "sizeHint"; write: "setSizeHint" }
        Property {
            name: "setSizeHint"
            type: "QJSValue"
            read: "getSetSizeHint"
            write: "setSetSizeHint"
        }
        Signal { name: "indexChanged" }
    }
}
