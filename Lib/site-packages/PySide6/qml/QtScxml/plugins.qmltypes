import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "private/eventconnection_p.h"
        name: "QScxmlEventConnection"
        accessSemantics: "reference"
        prototype: "QObject"
        interfaces: ["QQmlParserStatus"]
        exports: [
            "QtScxml/EventConnection 5.8",
            "QtScxml/EventConnection 6.0"
        ]
        exportMetaObjectRevisions: [1288, 1536]
        Property { name: "events"; type: "QStringList"; read: "events"; write: "setEvents" }
        Property {
            name: "stateMachine"
            type: "QScxmlStateMachine"
            isPointer: true
            read: "stateMachine"
            write: "setStateMachine"
        }
        Signal {
            name: "occurred"
            Parameter { name: "event"; type: "QScxmlEvent" }
        }
    }
    Component {
        file: "private/eventconnection_p.h"
        name: "QScxmlEvent"
        accessSemantics: "value"
        Enum {
            name: "EventType"
            values: ["PlatformEvent", "InternalEvent", "ExternalEvent"]
        }
        Property { name: "name"; type: "QString"; read: "name"; write: "setName" }
        Property { name: "eventType"; type: "EventType"; read: "eventType"; write: "setEventType" }
        Property { name: "scxmlType"; type: "QString"; isReadonly: true; read: "scxmlType" }
        Property { name: "sendId"; type: "QString"; read: "sendId"; write: "setSendId" }
        Property { name: "origin"; type: "QString"; read: "origin"; write: "setOrigin" }
        Property { name: "originType"; type: "QString"; read: "originType"; write: "setOriginType" }
        Property { name: "invokeId"; type: "QString"; read: "invokeId"; write: "setInvokeId" }
        Property { name: "delay"; type: "int"; read: "delay"; write: "setDelay" }
        Property { name: "data"; type: "QVariant"; read: "data"; write: "setData" }
        Property { name: "errorEvent"; type: "bool"; isReadonly: true; read: "isErrorEvent" }
        Property { name: "errorMessage"; type: "QString"; read: "errorMessage"; write: "setErrorMessage" }
        Method { name: "clear" }
    }
    Component {
        file: "private/invokedservices_p.h"
        name: "QScxmlInvokedServices"
        accessSemantics: "reference"
        defaultProperty: "qmlChildren"
        prototype: "QObject"
        interfaces: ["QQmlParserStatus"]
        exports: [
            "QtScxml/InvokedServices 5.8",
            "QtScxml/InvokedServices 6.0"
        ]
        exportMetaObjectRevisions: [1288, 1536]
        Property {
            name: "stateMachine"
            type: "QScxmlStateMachine"
            isPointer: true
            read: "stateMachine"
            write: "setStateMachine"
        }
        Property { name: "children"; type: "QVariantMap"; isReadonly: true; read: "children" }
        Property {
            name: "qmlChildren"
            type: "QObject"
            isList: true
            isReadonly: true
            read: "qmlChildren"
        }
    }
    Component {
        file: "private/statemachineextended_p.h"
        name: "QScxmlStateMachineExtended"
        accessSemantics: "reference"
        defaultProperty: "children"
        prototype: "QObject"
        Property { name: "children"; type: "QObject"; isList: true; isReadonly: true; read: "children" }
    }
    Component {
        file: "private/statemachineextended_p.h"
        name: "QScxmlStateMachine"
        accessSemantics: "reference"
        prototype: "QObject"
        extension: "QScxmlStateMachineExtended"
        exports: ["QtScxml/StateMachine 5.8", "QtScxml/StateMachine 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [1288, 1536]
        Property { name: "running"; type: "bool"; read: "isRunning"; write: "setRunning" }
        Property { name: "initialized"; type: "bool"; isReadonly: true; read: "isInitialized" }
        Property {
            name: "dataModel"
            type: "QScxmlDataModel"
            isPointer: true
            read: "dataModel"
            write: "setDataModel"
        }
        Property {
            name: "initialValues"
            type: "QVariantMap"
            read: "initialValues"
            write: "setInitialValues"
        }
        Property {
            name: "invokedServices"
            type: "QList<QScxmlInvokableService*>"
            isReadonly: true
            read: "invokedServices"
        }
        Property { name: "sessionId"; type: "QString"; isReadonly: true; read: "sessionId" }
        Property { name: "name"; type: "QString"; isReadonly: true; read: "name" }
        Property { name: "invoked"; type: "bool"; isReadonly: true; read: "isInvoked" }
        Property {
            name: "parseErrors"
            type: "QList<QScxmlError>"
            isReadonly: true
            read: "parseErrors"
        }
        Property {
            name: "loader"
            type: "QScxmlCompiler::Loader"
            isPointer: true
            read: "loader"
            write: "setLoader"
        }
        Property {
            name: "tableData"
            type: "QScxmlTableData"
            isPointer: true
            read: "tableData"
            write: "setTableData"
        }
        Signal {
            name: "runningChanged"
            Parameter { name: "running"; type: "bool" }
        }
        Signal {
            name: "invokedServicesChanged"
            Parameter { name: "invokedServices"; type: "QList<QScxmlInvokableService*>" }
        }
        Signal {
            name: "log"
            Parameter { name: "label"; type: "QString" }
            Parameter { name: "msg"; type: "QString" }
        }
        Signal { name: "reachedStableState" }
        Signal { name: "finished" }
        Signal {
            name: "dataModelChanged"
            Parameter { name: "model"; type: "QScxmlDataModel"; isPointer: true }
        }
        Signal {
            name: "initialValuesChanged"
            Parameter { name: "initialValues"; type: "QVariantMap" }
        }
        Signal {
            name: "initializedChanged"
            Parameter { name: "initialized"; type: "bool" }
        }
        Signal {
            name: "loaderChanged"
            Parameter { name: "loader"; type: "QScxmlCompiler::Loader"; isPointer: true }
        }
        Signal {
            name: "tableDataChanged"
            Parameter { name: "tableData"; type: "QScxmlTableData"; isPointer: true }
        }
        Method { name: "start" }
        Method { name: "stop" }
        Method { name: "init"; type: "bool" }
        Method {
            name: "stateNames"
            type: "QStringList"
            Parameter { name: "compress"; type: "bool" }
        }
        Method { name: "stateNames"; type: "QStringList" }
        Method {
            name: "activeStateNames"
            type: "QStringList"
            Parameter { name: "compress"; type: "bool" }
        }
        Method { name: "activeStateNames"; type: "QStringList" }
        Method {
            name: "isActive"
            type: "bool"
            Parameter { name: "scxmlStateName"; type: "QString" }
        }
        Method {
            name: "submitEvent"
            Parameter { name: "event"; type: "QScxmlEvent"; isPointer: true }
        }
        Method {
            name: "submitEvent"
            Parameter { name: "eventName"; type: "QString" }
        }
        Method {
            name: "submitEvent"
            Parameter { name: "eventName"; type: "QString" }
            Parameter { name: "data"; type: "QVariant" }
        }
        Method {
            name: "cancelDelayedEvent"
            Parameter { name: "sendId"; type: "QString" }
        }
        Method {
            name: "isDispatchableTarget"
            type: "bool"
            Parameter { name: "target"; type: "QString" }
        }
    }
    Component {
        file: "private/statemachineloader_p.h"
        name: "QScxmlStateMachineLoader"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "QtScxml/StateMachineLoader 5.8",
            "QtScxml/StateMachineLoader 6.0"
        ]
        exportMetaObjectRevisions: [1288, 1536]
        Property { name: "source"; type: "QUrl"; read: "source"; write: "setSource" }
        Property {
            name: "stateMachine"
            type: "QScxmlStateMachine"
            isReadonly: true
            isPointer: true
            read: "stateMachine"
        }
        Property {
            name: "initialValues"
            type: "QVariantMap"
            read: "initialValues"
            write: "setInitialValues"
        }
        Property {
            name: "dataModel"
            type: "QScxmlDataModel"
            isPointer: true
            read: "dataModel"
            write: "setDataModel"
        }
    }
}
