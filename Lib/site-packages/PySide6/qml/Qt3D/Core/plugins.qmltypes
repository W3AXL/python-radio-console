import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QAbstractSkeleton"
        accessSemantics: "value"
        exports: [
            "Qt3D.Core/AbstractSkeleton 2.10",
            "Qt3D.Core/AbstractSkeleton 6.0"
        ]
        isCreatable: false
        exportMetaObjectRevisions: [522, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QArmature"
        accessSemantics: "value"
        exports: ["Qt3D.Core/Armature 2.0", "Qt3D.Core/Armature 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QAttribute"
        accessSemantics: "value"
        exports: ["Qt3D.Core/Attribute 2.0", "Qt3D.Core/Attribute 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QBoundingVolume"
        accessSemantics: "value"
        exports: [
            "Qt3D.Core/BoundingVolume 2.16",
            "Qt3D.Core/BoundingVolume 6.0"
        ]
        isCreatable: false
        exportMetaObjectRevisions: [528, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QBuffer"
        accessSemantics: "value"
        exports: ["Qt3D.Core/BufferBase 2.0", "Qt3D.Core/BufferBase 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QComponent"
        accessSemantics: "value"
        exports: ["Qt3D.Core/Component3D 2.0", "Qt3D.Core/Component3D 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QEntity"
        accessSemantics: "value"
        extension: "Qt3DCore::Quick::Quick3DEntity"
        exports: ["Qt3D.Core/Entity 2.0", "Qt3D.Core/Entity 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QGeometry"
        accessSemantics: "value"
        extension: "Qt3DCore::Quick::Quick3DGeometry"
        exports: ["Qt3D.Core/Geometry 2.0", "Qt3D.Core/Geometry 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QGeometryView"
        accessSemantics: "value"
        exports: ["Qt3D.Core/GeometryView 2.16", "Qt3D.Core/GeometryView 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [528, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QJoint"
        accessSemantics: "value"
        extension: "Qt3DCore::Quick::Quick3DJoint"
        exports: ["Qt3D.Core/Joint 2.0", "Qt3D.Core/Joint 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QNode"
        accessSemantics: "value"
        extension: "Qt3DCore::Quick::Quick3DNode"
        exports: ["Qt3D.Core/Node 2.0", "Qt3D.Core/Node 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qquaternionanimation_p.h"
        name: "Qt3DCore::Quick::QQuaternionAnimation"
        accessSemantics: "reference"
        prototype: "QQuickPropertyAnimation"
        exports: [
            "Qt3D.Core/QuaternionAnimation 2.0",
            "Qt3D.Core/QuaternionAnimation 2.12",
            "Qt3D.Core/QuaternionAnimation 6.0"
        ]
        exportMetaObjectRevisions: [512, 524, 1536]
        Enum {
            name: "Type"
            values: ["Slerp", "Nlerp"]
        }
        Property { name: "from"; type: "QQuaternion"; read: "from"; write: "setFrom" }
        Property { name: "to"; type: "QQuaternion"; read: "to"; write: "setTo" }
        Property { name: "type"; type: "Type"; read: "type"; write: "setType" }
        Property {
            name: "fromXRotation"
            type: "float"
            read: "fromXRotation"
            write: "setFromXRotation"
        }
        Property {
            name: "fromYRotation"
            type: "float"
            read: "fromYRotation"
            write: "setFromYRotation"
        }
        Property {
            name: "fromZRotation"
            type: "float"
            read: "fromZRotation"
            write: "setFromZRotation"
        }
        Property { name: "toXRotation"; type: "float"; read: "toXRotation"; write: "setToXRotation" }
        Property { name: "toYRotation"; type: "float"; read: "toYRotation"; write: "setToYRotation" }
        Property { name: "toZRotation"; type: "float"; read: "toZRotation"; write: "setToZRotation" }
        Signal {
            name: "typeChanged"
            Parameter { name: "type"; type: "Type" }
        }
        Signal {
            name: "fromXRotationChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "fromYRotationChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "fromZRotationChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "toXRotationChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "toYRotationChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "toZRotationChanged"
            Parameter { name: "value"; type: "float" }
        }
    }
    Component {
        file: "private/qt3dquickvaluetypes_p.h"
        name: "QColor"
        accessSemantics: "value"
        extension: "QQuick3DColorValueType"
        exports: ["Qt3D.Core/color 2.0", "Qt3D.Core/color 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickvaluetypes_p.h"
        name: "QMatrix4x4"
        accessSemantics: "value"
        extension: "QQuick3DMatrix4x4ValueType"
        exports: ["Qt3D.Core/matrix4x4 2.0", "Qt3D.Core/matrix4x4 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickvaluetypes_p.h"
        name: "QQuaternion"
        accessSemantics: "value"
        extension: "QQuick3DQuaternionValueType"
        exports: ["Qt3D.Core/quaternion 2.0", "Qt3D.Core/quaternion 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickvaluetypes_p.h"
        name: "QVector2D"
        accessSemantics: "value"
        extension: "QQuick3DVector2DValueType"
        exports: ["Qt3D.Core/vector2d 2.0", "Qt3D.Core/vector2d 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickvaluetypes_p.h"
        name: "QVector3D"
        accessSemantics: "value"
        extension: "QQuick3DVector3DValueType"
        exports: ["Qt3D.Core/vector3d 2.0", "Qt3D.Core/vector3d 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickvaluetypes_p.h"
        name: "QVector4D"
        accessSemantics: "value"
        extension: "QQuick3DVector4DValueType"
        exports: ["Qt3D.Core/vector4d 2.0", "Qt3D.Core/vector4d 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QSkeletonLoader"
        accessSemantics: "value"
        exports: [
            "Qt3D.Core/SkeletonLoader 2.10",
            "Qt3D.Core/SkeletonLoader 6.0"
        ]
        isCreatable: false
        exportMetaObjectRevisions: [522, 1536]
    }
    Component {
        file: "private/qt3dquickforeign_p.h"
        name: "Qt3DCore::QTransform"
        accessSemantics: "value"
        exports: ["Qt3D.Core/Transform 2.0", "Qt3D.Core/Transform 6.0"]
        isCreatable: false
        exportMetaObjectRevisions: [512, 1536]
    }
    Component {
        file: "private/quick3dbuffer_p.h"
        name: "Qt3DCore::Quick::Quick3DBuffer"
        accessSemantics: "reference"
        exports: ["Qt3D.Core/Buffer 2.0", "Qt3D.Core/Buffer 6.0"]
        exportMetaObjectRevisions: [512, 1536]
        Property { name: "data"; type: "QVariant"; read: "bufferData"; write: "setBufferData" }
        Signal { name: "bufferDataChanged" }
        Method {
            name: "updateData"
            Parameter { name: "offset"; type: "int" }
            Parameter { name: "bytes"; type: "QVariant" }
        }
        Method {
            name: "readBinaryFile"
            type: "QVariant"
            Parameter { name: "fileUrl"; type: "QUrl" }
        }
    }
    Component {
        file: "private/quick3dentity_p.h"
        name: "Qt3DCore::Quick::Quick3DEntity"
        accessSemantics: "reference"
        prototype: "QObject"
        Property {
            name: "components"
            type: "Qt3DCore::QComponent"
            isList: true
            isReadonly: true
            read: "componentList"
        }
    }
    Component {
        file: "private/quick3dentityloader_p.h"
        name: "Qt3DCore::Quick::Quick3DEntityLoader"
        accessSemantics: "reference"
        exports: [
            "Qt3D.Core/EntityLoader 2.0",
            "Qt3D.Core/EntityLoader 2.12",
            "Qt3D.Core/EntityLoader 6.0"
        ]
        exportMetaObjectRevisions: [512, 524, 1536]
        Enum {
            name: "Status"
            values: ["Null", "Loading", "Ready", "Error"]
        }
        Property { name: "entity"; type: "QObject"; isReadonly: true; isPointer: true; read: "entity" }
        Property { name: "source"; type: "QUrl"; read: "source"; write: "setSource" }
        Property { name: "status"; type: "Status"; isReadonly: true; read: "status" }
        Property {
            name: "sourceComponent"
            revision: 524
            type: "QQmlComponent"
            isPointer: true
            read: "sourceComponent"
            write: "setSourceComponent"
        }
        Signal {
            name: "statusChanged"
            Parameter { name: "status"; type: "Status" }
        }
        Method {
            name: "_q_componentStatusChanged"
            Parameter { type: "QQmlComponent::Status" }
        }
    }
    Component {
        file: "private/quick3dgeometry_p.h"
        name: "Qt3DCore::Quick::Quick3DGeometry"
        accessSemantics: "reference"
        defaultProperty: "attributes"
        prototype: "QObject"
        Property {
            name: "attributes"
            type: "Qt3DCore::QAttribute"
            isList: true
            isReadonly: true
            read: "attributeList"
        }
    }
    Component {
        file: "private/quick3djoint_p.h"
        name: "Qt3DCore::Quick::Quick3DJoint"
        accessSemantics: "reference"
        prototype: "QObject"
        Property {
            name: "childJoints"
            type: "Qt3DCore::QJoint"
            isList: true
            isReadonly: true
            read: "childJoints"
        }
    }
    Component {
        file: "private/quick3dnode_p.h"
        name: "Qt3DCore::Quick::Quick3DNode"
        accessSemantics: "reference"
        defaultProperty: "data"
        prototype: "QObject"
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true; read: "data" }
        Property {
            name: "childNodes"
            type: "Qt3DCore::QNode"
            isList: true
            isReadonly: true
            read: "childNodes"
        }
        Method {
            name: "childAppended"
            Parameter { name: "idx"; type: "int" }
            Parameter { name: "child"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "childRemoved"
            Parameter { name: "idx"; type: "int" }
            Parameter { name: "child"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        file: "private/quick3dnodeinstantiator_p.h"
        name: "Qt3DCore::Quick::Quick3DNodeInstantiator"
        accessSemantics: "reference"
        defaultProperty: "delegate"
        interfaces: ["QQmlParserStatus"]
        exports: [
            "Qt3D.Core/NodeInstantiator 2.0",
            "Qt3D.Core/NodeInstantiator 6.0"
        ]
        exportMetaObjectRevisions: [512, 1536]
        Property { name: "active"; type: "bool"; read: "isActive"; write: "setActive" }
        Property { name: "asynchronous"; type: "bool"; read: "isAsync"; write: "setAsync" }
        Property { name: "model"; type: "QVariant"; read: "model"; write: "setModel" }
        Property { name: "count"; type: "int"; isReadonly: true; read: "count" }
        Property {
            name: "delegate"
            type: "QQmlComponent"
            isPointer: true
            read: "delegate"
            write: "setDelegate"
        }
        Property { name: "object"; type: "QObject"; isReadonly: true; isPointer: true; read: "object" }
        Signal {
            name: "objectAdded"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "objectRemoved"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "onParentChanged"
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "_q_createdItem"
            Parameter { type: "int" }
            Parameter { type: "QObject"; isPointer: true }
        }
        Method {
            name: "_q_modelUpdated"
            Parameter { type: "QQmlChangeSet" }
            Parameter { type: "bool" }
        }
        Method {
            name: "objectAt"
            type: "QObject*"
            Parameter { name: "index"; type: "int" }
        }
    }
}
